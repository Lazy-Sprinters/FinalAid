# -*- coding: utf-8 -*-
"""ihackviz.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18ivpvrLzXZ9c0Rp9S9ZXmEpgMs-t81iE
"""

!pip install flask-ngrok

!pip install plotly==4.5.0

!pip install orca

!wget https://github.com/plotly/orca/releases/download/v1.2.1/orca-1.2.1-x86_64.AppImage -O /usr/local/bin/orca
!chmod +x /usr/local/bin/orca
!apt-get install xvfb libgtk2.0-0 libgconf-2-4

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from random import randint
from flask import Flask, jsonify, request
from flask_ngrok import run_with_ngrok
import plotly.express as px
import plotly.graph_objects as go
import io
import plotly
import plotly.io as pio
from PIL import Image
from base64 import b64encode
import time
import retrying
plt.style.use('ggplot')
plotly.io.orca.config.executable = '/usr/local/bin/orca'

states = ['Andaman and Nicobar Islands', 'Andhra Pradesh',
       'Arunachal Pradesh', 'Assam', 'Bihar', 'Chandigarh',
       'Chhattisgarh', 'Dadra and Nagar Haveli and Daman and Diu',
       'Delhi', 'Goa', 'Gujarat', 'Haryana', 'Himachal Pradesh',
       'Jammu & Kashmir', 'Jharkhand', 'Karnataka', 'Kerala', 'Ladakh',
       'Madhya Pradesh', 'Maharashtra', 'Manipur', 'Meghalaya', 'Mizoram',
       'Nagaland', 'Odisha', 'Puducherry', 'Punjab', 'Rajasthan',
       'Sikkim', 'Tamil Nadu', 'Telengana', 'Tripura', 'Uttarakhand',
       'Uttar Pradesh', 'West Bengal']

geojson="https://gist.githubusercontent.com/jbrobst/56c13bbbf9d97d187fea01ca62ea5112/raw/e388c4cae20aa53cb5090210a42ebb9b765c0a36/india_states.geojson"

app = Flask(__name__)
run_with_ngrok(app)


@app.route("/geodata", methods=["POST"])
def home():
  data = request.json
  df = pd.DataFrame.from_dict(data)
  df.head()
  geojson="https://gist.githubusercontent.com/jbrobst/56c13bbbf9d97d187fea01ca62ea5112/raw/e388c4cae20aa53cb5090210a42ebb9b765c0a36/india_states.geojson"
  fig = px.choropleth(
    df[['States','Deaths']],
    geojson="https://gist.githubusercontent.com/jbrobst/56c13bbbf9d97d187fea01ca62ea5112/raw/e388c4cae20aa53cb5090210a42ebb9b765c0a36/india_states.geojson",
    featureidkey='properties.ST_NM',
    locations='States',
    color='Deaths',
    color_continuous_scale='Reds',
    )

  fig.update_geos(fitbounds="locations", visible=False)
  unwrapped = plotly.io._orca.request_image_with_retrying.__wrapped__
  wrapped = retrying.retry(wait_random_min=1000)(unwrapped)
  plotly.io._orca.request_image_with_retrying = wrapped
  img_bytes =  pio.to_image(fig,format='png')
  encoding = b64encode(img_bytes).decode()
  return str(encoding)

@app.route("/requestdata", methods=["POST"])
def visualise():
  data = request.json
  df = pd.DataFrame.from_dict(data)
  plt.figure(figsize=(20,10))
  df = df.melt('States', var_name='Requests',  value_name='Number_Of_requests')
  chart = sns.barplot(data = df, x='States',y='Number_Of_requests',hue='Requests')
  plt.xticks(rotation=270)
  my_stringIObytes = io.BytesIO()
  plt.savefig(my_stringIObytes, format='png')
  my_stringIObytes.seek(0)
  my_base64_jpgData = b64encode(my_stringIObytes.read()).decode()
  return str(my_base64_jpgData)

app.run()

